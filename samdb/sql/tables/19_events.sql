/* Table:		EVENTS
 * Prefix:		EVE
 * Date:		31/10/2014       
 * Author:		Joabe Lucena
 * References:	none
 * Obs:		
 * */

/*TABLE*/
CREATE TABLE EVENTS (
  EVE_ID				BIGINT		NOT NULL PRIMARY KEY,
  EVE_EQUIPMENT_ID		VARCHAR(20)	NOT NULL,
  EVE_ALARM_ID			VARCHAR(20)	NOT NULL,
  EVE_OPER_STATE_ID		VARCHAR(20),
  EVE_DATETIME			TIMESTAMP	NOT NULL,
  EVE_SOLV_USER			VARCHAR(45),
  EVE_SOLV_DATE			TIMESTAMP,
  EVE_RECO_USER			VARCHAR(45),
  EVE_RECO_DATE			TIMESTAMP,
  EVE_SITE				VARCHAR(45),
  EVE_MODEL				VARCHAR(45),
  USR_INSERT			VARCHAR(45) NOT NULL,
  DTI_INSERT			TIMESTAMP	NOT NULL,
  USR_UPDATE			VARCHAR(45),
  DTI_UPDATE			TIMESTAMP);
COMMIT;



/*INDEXES*/
CREATE INDEX ix_EVE_INDEX1_idx ON EVENTS(EVE_ID, EVE_EQUIPMENT_ID, EVE_DATETIME);
CREATE INDEX ix_EVE_INDEX2_idx ON EVENTS(EVE_ID, EVE_EQUIPMENT_ID, EVE_ALARM_ID);
CREATE INDEX ix_EVE_INDEX3_idx ON EVENTS(EVE_ID, EVE_EQUIPMENT_ID);
  
  
/*REFERENCES*/


/*GENERATOR*/
CREATE GENERATOR GEN_EVE_ID;
SET GENERATOR GEN_EVE_ID TO 0;


/*TRIGGER ID*/
SET TERM ^ ;
CREATE TRIGGER TRG_EVE_ID  FOR EVENTS ACTIVE
BEFORE INSERT
AS
BEGIN
	if(new.EVE_ID IS NULL)
        then new.EVE_ID = GEN_ID(GEN_EVE_ID,1);
END^
SET TERM ; ^
COMMIT;


/*TRIGGER LOG*/
SET TERM ^ ;
CREATE TRIGGER TRG_EVE_LOG  FOR EVENTS ACTIVE
BEFORE INSERT OR UPDATE
AS
BEGIN
	if(inserting)
        then new.DTI_INSERT = CURRENT_TIMESTAMP;
    if(updating)
        then new.DTI_UPDATE = CURRENT_TIMESTAMP;
END^
SET TERM ; ^
COMMIT;


/******* END OF TABLE CONFIG *******/

