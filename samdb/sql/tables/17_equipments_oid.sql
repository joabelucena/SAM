/* Table:		EQUIPMENTS_OID
 * Prefix:		EOI
 * Date:		30/11/2015
 * Author:		Joabe Lucena
 * References:	none
 * Obs:
 * */

/*TABLE*/
CREATE TABLE EQUIPMENTS_OID (
  EOI_ID			INT 		NOT NULL PRIMARY KEY,
  EOI_MODEL_ID		INT,
  EOI_OID			VARCHAR(45),
  EOI_ALARM_ID		VARCHAR(20),
  USR_INSERT		VARCHAR(45)	NOT NULL,
  DTI_INSERT		TIMESTAMP	NOT NULL,
  USR_UPDATE		VARCHAR(45),
  DTI_UPDATE		TIMESTAMP
);
COMMIT;

/*INDEXES*/
CREATE INDEX fk_EOI_EMO_idx ON EQUIPMENTS_OID(EOI_MODEL_ID);
CREATE INDEX fk_EOI_ALM_idx ON EQUIPMENTS_OID(EOI_ALARM_ID);

/*REFERENCES*/
ALTER TABLE EQUIPMENTS_OID
ADD CONSTRAINT fk_EOI_EMO_ref
    FOREIGN KEY (EOI_MODEL_ID)
    REFERENCES EQUIPMENTS_MODEL (EMO_ID),
ADD CONSTRAINT fk_EOI_ALM_ref
    FOREIGN KEY (EOI_ALARM_ID)
    REFERENCES ALARMS (ALM_ID);

    
/*GENERATOR*/
CREATE GENERATOR GEN_EOI_ID;
SET GENERATOR GEN_EOI_ID TO 0;


/*TRIGGER ID*/
SET TERM ^ ;
CREATE TRIGGER TRG_EOI_ID  FOR EQUIPMENTS_OID ACTIVE
BEFORE INSERT
AS
BEGIN
	if(new.EOI_ID IS NULL)
        then new.EOI_ID = GEN_ID(GEN_EOI_ID,1);
END^
SET TERM ; ^
COMMIT;


/*TRIGGER LOG*/
SET TERM ^ ;
CREATE TRIGGER TRG_EOI_LOG  FOR EQUIPMENTS_OID ACTIVE
BEFORE INSERT OR UPDATE
AS
BEGIN
	if(inserting)
        then new.DTI_INSERT = CURRENT_TIMESTAMP;
    if(updating)
        then new.DTI_UPDATE = CURRENT_TIMESTAMP;
END^
SET TERM ; ^
COMMIT;


/******* END OF TABLE CONFIG *******/

