/* Table:		SERVICE_ORDER_LOG
 * Prefix:		SOL
 * Date:		04/11/2014
 * Author:		Joabe Lucena
 * References:	none
 * Obs:
 * */

/*TABLE*/
CREATE TABLE SERVICE_ORDER_LOG (
  SOL_ID				INT			NOT NULL PRIMARY KEY,
  SOL_SERVICE_ORDER_ID	INT			NOT NULL,
  SOL_PRE_STATUS_ID		INT,
  SOL_CUR_STATUS_ID		INT			NOT NULL,
  SOL_USER_ID			VARCHAR(45) NOT NULL,
  SOL_DATETIME			TIMESTAMP	NOT NULL,
  SOL_REMARKS			CHAR(255),
  USR_INSERT			VARCHAR(45)	NOT NULL,
  DTI_INSERT			TIMESTAMP	NOT NULL,
  USR_UPDATE			VARCHAR(45),
  DTI_UPDATE			TIMESTAMP);
COMMIT;

/*INDEXES*/
CREATE INDEX fk_SOL_SOR_idx ON SERVICE_ORDER_LOG(SOL_SERVICE_ORDER_ID);
CREATE INDEX fk_SOL_SOS_A_idx ON SERVICE_ORDER_LOG(SOL_PRE_STATUS_ID);
CREATE INDEX fk_SOL_SOS_B_idx ON SERVICE_ORDER_LOG(SOL_CUR_STATUS_ID);
  
/*REFERENCES*/
ALTER TABLE SERVICE_ORDER_LOG
ADD CONSTRAINT fk_SOL_SOR_ref
    FOREIGN KEY (SOL_SERVICE_ORDER_ID)
    REFERENCES SERVICE_ORDER (SOR_ID),
    
ADD CONSTRAINT fk_SOL_SOS_A_ref
    FOREIGN KEY (SOL_PRE_STATUS_ID)
    REFERENCES SERVICE_ORDER_STATUS (SOS_ID),

ADD CONSTRAINT fk_SOL_SOS_B_ref
    FOREIGN KEY (SOL_CUR_STATUS_ID)
    REFERENCES SERVICE_ORDER_STATUS (SOS_ID);

/*GENERATOR*/
CREATE GENERATOR GEN_SOL_ID;
SET GENERATOR GEN_SOL_ID TO 0;


/*TRIGGER ID*/
SET TERM ^ ;
CREATE TRIGGER TRG_SOL_ID  FOR SERVICE_ORDER_LOG ACTIVE
BEFORE INSERT
AS
BEGIN
	if(new.SOL_ID IS NULL)
        then new.SOL_ID = GEN_ID(GEN_SOL_ID,1);
END^
SET TERM ; ^
COMMIT;


/*TRIGGER LOG*/
SET TERM ^ ;
CREATE TRIGGER TRG_SOL_LOG  FOR SERVICE_ORDER_LOG ACTIVE
BEFORE INSERT OR UPDATE
AS
BEGIN
	if(inserting)
        then new.DTI_INSERT = CURRENT_TIMESTAMP;
    if(updating)
        then new.DTI_UPDATE = CURRENT_TIMESTAMP;
END^
SET TERM ; ^
COMMIT;


/******* END OF TABLE CONFIG *******/

