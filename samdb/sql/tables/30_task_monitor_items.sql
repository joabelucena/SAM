/* Table:		TASK_MONITOR_ITEMS
 * Prefix:		TMI
 * Date:		09/06/2015
 * Author:		Joabe Lucena
 * References:	none
 * Obs:
 * */

/*TABLE*/
CREATE TABLE TASK_MONITOR_ITEMS (
	TMI_ID				INT			NOT NULL PRIMARY KEY,
	TMI_TASK_ID			INT			NOT NULL,
	TMI_SEQ				VARCHAR(02)	NOT NULL,
	TMI_LOGIC_OP		VARCHAR(03)	NOT NULL,
	TMI_TYPE			VARCHAR(02)	NOT NULL,
	TMI_FIELD			VARCHAR(45)	NOT NULL,
	TMI_RELATIONAL_OP	VARCHAR(02)	NOT NULL,
	TMI_VALUE			INT			NOT NULL,
	USR_INSERT			VARCHAR(45)	NOT NULL,
	DTI_INSERT			TIMESTAMP	NOT NULL,
	USR_UPDATE			VARCHAR(45),
	DTI_UPDATE			TIMESTAMP
);
COMMIT;

/*INDEXES*/
CREATE INDEX fk_TMI_TMH_idx ON TASK_MONITOR_ITEMS(TMI_TASK_ID);
  
/*REFERENCES*/
ALTER TABLE TASK_MONITOR_ITEMS
ADD CONSTRAINT fk_TMI_TMH_ref
    FOREIGN KEY (TMI_TASK_ID)
    REFERENCES TASK_MONITOR_HEADER (TMH_ID);


/*GENERATOR*/
CREATE GENERATOR GEN_TMI_ID;
SET GENERATOR GEN_TMI_ID TO 0;


/*TRIGGER ID*/
SET TERM ^ ;
CREATE TRIGGER TRG_TMI_ID  FOR TASK_MONITOR_ITEMS ACTIVE
BEFORE INSERT
AS
BEGIN
	if(new.TMI_ID IS NULL)
        then new.TMI_ID = GEN_ID(GEN_TMI_ID,1);
END^
SET TERM ; ^
COMMIT;


/*TRIGGER LOG*/
SET TERM ^ ;
CREATE TRIGGER TRG_TMI_LOG  FOR TASK_MONITOR_ITEMS ACTIVE
BEFORE INSERT OR UPDATE
AS
BEGIN
	if(inserting)
        then new.DTI_INSERT = CURRENT_TIMESTAMP;
    if(updating)
        then new.DTI_UPDATE = CURRENT_TIMESTAMP;
END^
SET TERM ; ^
COMMIT;


/******* END OF TABLE CONFIG *******/

